标准I/O
opendir	getc	putc 	read	write	ferrorr	getpid	execlp	fprintf	strerror
perror

限制：
	1) 编译时限制
	2) 不与文件或目录相关联的运行时限制（sysconf函数）。
	3) 与文件或目录相关联的运行时限制（pathconf和fpathconf函数）。

文件I/O
	对于内核而言，所有打开的文件都通过文件描述符引用。文件描述符是一个非负
	整数。当打开一个现有文件或创建一个新文件时，内核向进程返回一个文件描述
	符。
	open()
	int open(const char *pathname, int oflag, .../- mode -/);

	oflag:
		O_RDONLY	0
		O_WRONLY	1
		O_RDWR		2

3.3 顺序执行下面3个函数调用
	fd1 = open(pathname, oflags);
	fd2 = dup(fd1);
	fd3 = open(pathname, oflags);

	open 会新建文件描述符，文件表项,指向同一个v节点。
	dup 新建一个新的文件描述符，但是指向上面一个文件表项。

4.
	stat函数返回与此命名文件有关的信息结构。
	fstat函数获取已在描述副filedes上打开文件的有关信息。
	lstat函数类似于stat，但是当命名的文件是一个符号链接时
文件类型
	1. 普通文件
	普通文件(regular file)。至于这种数据是文本还是二进制数据对于UNIX内核而言
	并无区别。对普通文件内容的解释由处理该文件的应用程序进行。

	2. 目录文件(directory file)
	这种文件包含了其他文件的名字以及指向与这些文件有信息的指针。对一个目录文
	件具有读权限的任一进程都可以度该目录的内容，但只有内核可以直接写目录文件

	3. 块特殊文件(block special file)
	这种文件类型提供设备（例如磁盘）带缓冲的访问，每次访问以固定长度为单位进
	行。

	4. 字符特殊文件(character special file)
	这种文件类型提供对设备不带缓冲的访问，每次访问长度可变。系统中的所有设备	系统的所有设备要么是字符特殊文件，要么是块特殊
	要么是字符特殊文件，也么是块特殊文件。						文件。

	5. FIFO
	用于进程间通信，有时也将其称为命名管道(named pipe)。

	6. 套接字(socket)
	用于进程间的网络通信。套接字也可用于在一台宿主上进程之间的非网络通信。

	7. 符号连接(symbolic link)
	指向另一个文件。

	文件类型信息包含在stat结构的st_mode成员中。

POSIX.1允许实现将进程间通信(IPC)对象（例如，消息队列，信号量，共享内存等）表示为
文件。
