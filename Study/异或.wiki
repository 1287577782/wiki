按位异或的几个常见用途：
1.使某些特定的位翻转
	例如把10100001的第2位和第3位翻转，则可以将该数与00000110进行按位异或运算：
		10100001^00000110 = 10100111
2.实现两个值的交换，而不必使用临时变量。
	例如交换两个整数 a = 1010 0001,b = 0000 0110的值，可通过下列语句实现：
		a = a ^ b;	//a = 1010 0111
		b = b ^ a;	//b = 1010 0001
		a = a ^ b;	//a = 0000 0110
  加减法交换两个变量的交换。
		A = A + B;
		B = A - B;
		A = A - B;
3.还可以把一个变量置零
	xor	a, a
4.快速判断两个值是否相等
	if ((a ^ b) == 0)
5.linux内核ipv6中比较地址是否相等
	static inline int ipv6_addr_equal(const struct in6_addr *al, const struct in6_addr *a)
	{
		return ((a1->s6_addr32[0] ^ a2->s6_addr32[0]) |
        		(a1->s6_addr32[1] ^ a2->s6_addr32[1]) |
        		(a1->s6_addr32[2] ^ a2->s6_addr32[2]) |
        		(a1->s6_addr32[3] ^ a2->s6_addr32[3])) == 0;
	}


